/* vim: set ft=c tw=174: */
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include "./corne_key_positions.h"
#include "./helpers.h"

/* Keymap */
#define BASE 0
#define NS 1
#define NAV 2
#define SYS 3

ZMK_LAYER(base,
  &kp EQUAL &kp Q &kp W &kp E   &kp R       &kp T        /* */ &kp Y        &kp U   &kp I      &kp O   &kp P    &kp MINUS
  &kp ESC   &kp A &kp S &kp D   &kp F       &kp G        /* */ &kp H        &kp J   &kp K      &kp L   &kp SEMI &kp SQT
  &kp LBKT  &kp Z &kp X &kp C   &kp V       &kp B        /* */ &kp N        &kp M   &kp COMMA  &kp DOT &kp FSLH &kp RBKT
                        &kp DEL &lt SYS TAB &lt NAV BSPC /* */ &lt NS SPACE &kp RET &caps_word
)

ZMK_LAYER(ns,
  &none &kp EXCL &kp N7 &kp N8   &kp N9    &none     /* */ &none &kp CARET &kp DLLR  &kp AMPS &kp PIPE &none
  &none &kp AT   &kp N4 &kp N5   &kp N6    &none     /* */ &none &kp LPAR  &kp RPAR  &kp HASH &kp STAR &none
  &none &kp N0   &kp N1 &kp N2   &kp N3    &none     /* */ &none &kp LSHFT &kp LCTRL &kp LALT &kp LGUI &none
                        &kp BSLH &kp GRAVE &kp PRCNT /* */ &none &none     &none
)

ZMK_LAYER(nav,
  &none &kp LG(N6) &kp LG(N7) &kp LG(N8) &kp LG(N9) &kp LG(N0) /* */ &kp LC(LEFT) &kp LC(DOWN)  &kp LC(UP)    &kp LC(RIGHT) &kp LC(X) &none
  &none &kp LG(N1) &kp LG(N2) &kp LG(N3) &kp LG(N4) &kp LG(N5) /* */ &kp LEFT     &kp DOWN      &kp UP        &kp RIGHT     &kp LC(C) &kp LS(LC(C))
  &none &kp LGUI   &kp LALT   &kp LCTRL  &kp LSHFT  &sk LSHFT  /* */ &kp HOME     &kp PG_DN     &kp PG_UP     &kp END       &kp LC(V) &kp LS(LC(V))
                              &none      &none      &none      /* */ &none        &none         &none
)

ZMK_LAYER(sys,
 &bt BT_SEL 2 &kp PSCRN     &kp C_BACKLIGHT_TOGGLE &kp C_BRIGHTNESS_DEC &kp C_BRIGHTNESS_INC &none /* */ &none &kp F8 &kp F8 &kp F9 &kp F12 &none
 &bt BT_SEL 1 &kp LS(PSCRN) &kp C_MUTE             &kp C_VOL_DN         &kp C_VOL_UP         &none /* */ &none &kp F4 &kp F5 &kp F6 &kp F11 &none
 &bt BT_SEL 0 &kp LGUI      &kp LALT               &kp LCTRL            &kp LSHFT            &none /* */ &none &kp F1 &kp F2 &kp F3 &kp F10 &none
                                                   &bt BT_CLR           &none                &none /* */ &none &none  &none
)

combos {
  compatible = "zmk,combos";

  /*                                      42 KEY MATRIX / LAYOUT MAPPING

    ╭────────────────────────┬────────────────────────╮ ╭─────────────────────────┬─────────────────────────╮
    │  0   1   2   3   4   5 │  6   7   8   9  10  11 │ │ LT5 LT4 LT3 LT2 LT1 LT0 │ RT0 RT1 RT2 RT3 RT4 RT5 │
    │ 12  13  14  15  16  17 │ 18  19  20  21  22  23 │ │ LM5 LM4 LM3 LM2 LM1 LM0 │ RM0 RM1 RM2 RM3 RM4 RM5 │
    │ 24  25  26  27  28  29 │ 30  31  32  33  34  35 │ │ LB5 LB4 LB3 LB2 LB1 LB0 │ RB0 RB1 RB2 RB3 RB4 RB5 │
    ╰───────────╮ 36  37  38 │ 39  40  41 ╭───────────╯ ╰───────────╮ LH2 LH1 LH0 │ RH0 RH1 RH2 ╭───────────╯
                ╰────────────┴────────────╯                         ╰─────────────┴─────────────╯             */

  COMBO(l_shift, BASE, &kp LSHFT, LM1 LM2)
  COMBO(l_ctrl, BASE, &kp LCTRL, LM1 LM3)
  COMBO(l_alt, BASE, &kp LALT, LM1 LM4)
  COMBO(l_gui, BASE, &kp LGUI, LM1 LB1)
  COMBO(l_shift_ctrl, BASE, &kp LS(LCTRL), LM1 LM2 LM3)
  COMBO(l_shift_alt, BASE, &kp LS(LALT), LM1 LM2 LM4)
  COMBO(l_shift_gui, BASE, &kp LS(LGUI), LM1 LM2 LB1)
  COMBO(l_ctrl_alt, BASE, &kp LC(LALT), LM1 LM3 LM4)
  COMBO(l_ctrl_gui, BASE, &kp LC(LGUI), LM1 LM3 LB1)
  COMBO(l_alt_gui, BASE, &kp LA(LGUI), LM1 LM4 LB1)
  COMBO(l_shift_ctrl_alt, BASE, &kp LS(LC(LALT)), LM1 LM2 LM3 LM4)
  COMBO(l_shift_ctrl_gui, BASE, &kp LS(LC(LGUI)), LM1 LM2 LM3 LB1)
  COMBO(l_ctrl_alt_gui, BASE, &kp LC(LA(LGUI)), LM1 LM3 LM4 LB1)

  COMBO(r_shift, BASE, &kp RSHFT, RM1 RM2)
  COMBO(r_ctrl, BASE, &kp LCTRL, RM1 RM3)
  COMBO(r_alt, BASE, &kp LALT, RM1 RM4)
  COMBO(r_gui, BASE, &kp LGUI, RM1 RB1)
  COMBO(r_shift_ctrl, BASE, &kp LS(LCTRL), RM1 RM2 RM3)
  COMBO(r_shift_alt, BASE, &kp LS(LALT), RM1 RM2 RM4)
  COMBO(r_shift_gui, BASE, &kp LS(LGUI), RM1 RM2 RB1)
  COMBO(r_ctrl_alt, BASE, &kp LC(LALT), RM1 RM3 RM4)
  COMBO(r_ctrl_gui, BASE, &kp LC(LGUI), RM1 RM3 RB1)
  COMBO(r_alt_gui, BASE, &kp LA(LGUI), RM1 RM4 RB1)
  COMBO(r_shift_ctrl_alt, BASE, &kp LS(LC(LALT)), RM1 RM2 RM3 RM4)
  COMBO(r_shift_ctrl_gui, BASE, &kp LS(LC(LGUI)), RM1 RM2 RM3 RB1)
  COMBO(r_ctrl_alt_gui, BASE, &kp LC(LA(LGUI)), RM1 RM3 RM4 RB1)
};
