/* vim: set ft=c tw=174: */
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include "./helpers.h"

/* Keymap */
#define BASE 0
#define NUM 1
#define SYM 2
#define NAV 3
#define WIN 4
#define SYS 5

// TODO: numword, symword, special chars
ZMK_LAYER(base,
  &kp GRAVE   &kp Q       &kp W       &kp E        &kp R        &kp T        /* */ &kp Y         &kp U        &kp I        &kp O       &kp P          &kp MINUS
  &lt NAV ESC &hml LGUI A &hml LALT S &hml LCTRL D &hml LSHFT F &kp G        /* */ &kp H         &hmr RSHFT J &hmr LCTRL K &hmr LALT L &hmr LGUI SEMI &kp SQT
  &kp BSLH    &kp Z       &kp X       &kp C        &kp V        &kp B        /* */ &kp N         &kp M        &kp COMMA    &kp DOT     &kp FSLH       &kp EQUAL
                                      &kp DEL      &lt WIN TAB  &lt NUM BSPC /* */ &lt SYM SPACE &lt SYS RET  &caps_word
)

ZMK_LAYER(num,
  &none &none    &none    &none     &none     &none /* */ &none &kp N7  &kp N8 &kp N9 &none  &kp KP_NUM
  &none &kp LGUI &kp LALT &kp LCTRL &kp LSHFT &none /* */ &none &kp N4  &kp N5 &kp N6 &kp N0 &none
  &none &none    &none    &none     &none     &none /* */ &none &kp N1  &kp N2 &kp N3 &none  &none
                          &none     &none     &none /* */ &kp SPACE &kp RET &none
)

ZMK_LAYER(sym,
  &none &kp LBKT  &kp LBRC &kp RBRC &kp RBKT &none     /* */ &none &none     &none     &none    &none    &none
  &none &kp CARET &kp LPAR &kp RPAR &kp DLLR &kp PRCNT /* */ &none &kp RSHFT &kp LCTRL &kp LALT &kp LGUI &none
  &none &kp HASH  &kp AT   &kp AMPS &kp STAR &kp EXCL  /* */ &none &none     &none     &none    &none    &none
                           &kp DEL  &kp TAB  &kp BSPC  /* */ &none &none     &none
)

ZMK_LAYER(nav,
  &none &none    &none    &none     &none     &none    /* */ &kp HOME  &kp PG_DN &kp PG_UP &kp END   &none     &none
  &none &kp LGUI &kp LALT &kp LCTRL &kp LSHFT &none    /* */ &kp LEFT  &kp DOWN  &kp UP    &kp RIGHT &kp LA(A) &none
  &none &none    &none    &none     &none     &none    /* */ &kp LC(X) &kp LC(C) &kp LC(V) &kp LC(Z) &kp LC(S) &none   
                          &kp DEL   &kp TAB   &kp BSPC /* */ &kp SPACE &kp RET   &caps_word
)

ZMK_LAYER(win,
 &none &none    &none    &none     &none     &none /* */ &none     &kp LG(N7) &kp LG(N8) &kp LG(N9) &none      &none
 &none &kp LGUI &kp LALT &kp LCTRL &kp LSHFT &none /* */ &none     &kp LG(N4) &kp LG(N5) &kp LG(N6) &kp LG(N0) &none
 &none &none    &none    &none     &none     &none /* */ &none     &kp LG(N1) &kp LG(N2) &kp LG(N3) &none      &none
                         &none     &none     &none /* */ &kp SPACE &kp RET    &none
)

ZMK_LAYER(sys,
 &kp PSCRN &kp F9 &kp F10 &kp F11    &kp F12      &kp C_BKLT_TOG /* */ &bt BT_SEL 0 &kp C_RW   &kp C_SLOW &kp C_SHUFFLE &kp C_FF   &none
 &none     &kp F5 &kp F6  &kp F7     &kp F8       &kp C_BRI_INC  /* */ &bt BT_SEL 1 &kp RSHFT  &kp LCTRL  &kp LALT      &kp LGUI   &none
 &none     &kp F1 &kp F2  &kp F3     &kp F4       &kp C_BRI_DEC  /* */ &bt BT_SEL 2 &kp C_PREV &kp C_STOP &kp C_PP      &kp C_NEXT &none
                          &kp C_MUTE &kp C_VOL_DN &kp C_VOL_UP   /* */ &bt BT_CLR   &none      &none
)
